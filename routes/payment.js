const express = require('express');
const router = express.Router();
const flash = require('connect-flash');
const Order = require('../models/order');

// ‚úÖ Middleware ki·ªÉm tra quy·ªÅn thu ng√¢n
function isCashier(req, res, next) {
    if (req.session.user && req.session.user.staffRole === 'Thu ng√¢n') {
        return next();
    }
    return res.redirect('/auth/login');
}

// üßæ Hi·ªÉn th·ªã danh s√°ch c√°c b√†n c√≥ m√≥n ƒë√£ ƒë·∫∑t
router.get('/', isCashier, async (req, res) => {
    try {
        const orders = await Order.find({ userId: req.session.userId });

        const tableNumbers = orders
            .filter(order => order.items.length > 0)
            .map(order => order.tableNumber);

        res.render('order/payment_list', {
            tableNumbers,
            session: req.session
        });
    } catch (error) {
        console.error('L·ªói khi l·∫•y ƒë∆°n h√†ng:', error);
        res.status(500).send('L·ªói khi l·∫•y ƒë∆°n h√†ng');
    }
});

// üí≥ Hi·ªÉn th·ªã trang thanh to√°n cho b√†n c·ª• th·ªÉ
router.get('/:tableNumber', isCashier, async (req, res) => {
    const { tableNumber } = req.params;

    try {
        const order = await Order.findOne({ tableNumber: tableNumber, userId: req.session.userId });

        if (!order || !order.items || order.items.length === 0) {
            return res.redirect('/payment');
        }

        const cart = order.items.map(item => ({
            name: item.name || 'Ch∆∞a c√≥ t√™n m√≥n',
            price: typeof item.price === 'number' ? item.price : 0,
            quantity: item.quantity || 1
        }));

        const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);

        res.render('order/payment', {
            tableNumber,
            cart,
            total,
            successMessage: req.flash('success')[0],
            session: req.session
        });
    } catch (error) {
        console.error('L·ªói khi l·∫•y ƒë∆°n h√†ng:', error);
        res.status(500).send('L·ªói khi l·∫•y ƒë∆°n h√†ng');
    }
});

// ‚úÖ X√°c nh·∫≠n thanh to√°n
router.post('/confirm/:tableNumber', isCashier, async (req, res) => {
    const { tableNumber } = req.params;

    try {
        const order = await Order.findOne({ tableNumber: tableNumber, userId: req.session.userId });

        if (!order || !order.items || order.items.length === 0) {
            req.flash('error', 'Gi·ªè h√†ng kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.');
            return res.redirect('/payment');
        }

        const total = order.items.reduce((acc, item) => acc + item.price * item.quantity, 0);

        const paymentMethod = req.body.paymentMethod || 'Ti·ªÅn m·∫∑t';

        await Order.deleteOne({ tableNumber: tableNumber, userId: req.session.userId });

        req.flash('success', 'üí∏ Thanh to√°n th√†nh c√¥ng!');
        res.redirect(`/payment/${tableNumber}`);
    } catch (error) {
        console.error('L·ªói khi x√°c nh·∫≠n thanh to√°n:', error);
        res.status(500).send('L·ªói khi x√°c nh·∫≠n thanh to√°n');
    }
});

module.exports = router;
